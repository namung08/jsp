1. 액션태그 - 행위에 대한 태그
 - jsp 페이지에서 동일한 내용이라도 자바 코드를 기술하기 보다는 태그를 기술하는 것이 지저분하지 않고 깔끔하게 코딩할 수 있어 가독성 높은 소스코드를 작성할 수 있다.
   또한 코드 양을 대폭 줄일수 있다.
 - 페이지와 페이지 사이를 제어하거나 다른 페이지의 실행 결과 내용을 현재 페이지에 포함하거나 자바 빈즈(객체) 등의 다양한 기능을 제공한다.
 - 액션태그는 XML문법을 따른다. 즉 시작 태그와 함께 반드시 종료 태그를 포함해야한다.
 - 액션 태그의 기본 형식 : <jsp:... 속성="값"> 내용 </jsp:... 속성="값">
 - 내용이 없는 액션 태그의 형식 : <jsp:... 속성="값"/>

 1-1. 액션태그 종류
 - forward : 다른 페이지로의 이동, 페이지 흐름 제어 
    <jsp:forward ...>
 - include : 외부 페이지의 내용을 포함하거나 페이지 모듈화
    <jsp:include ...>
 - param : 현재 페이지에서 다른 페이지에 대한 정보를 전달할 때 사용(파라미터)
    <jsp:param ...>
 - userBean : 빈을 생성하고 사용하기 위한 환경을 정의
    <jsp:userBean ...>
 - setProperty : 빈 속성 값을 할당
    <jsp:setProperty ...>
 - getProperty : 빈 속성 값을 얻어올 때 사용
    <jsp:getProperty ...>

2. 페이지 이동
 2-1. forward
 - request에 담긴 값이 유효하다.(request, response가 유지된다)
 - 이동된  url이 화면에 안보인다.(사용자는 이동했는지 알 수 없음)
 - forward 하는 방법
    -> <jsp:forward page="이동할 페이지"/>
    -> pageContext.forward("이동할페이지");

 2-2. redirect
 - 클라이언트가 새로 페이지를 요청한 것과 같은 방식으로 페이지가 이동됨. request, response가 유지되지 않는다.(새로 만들어진다)
 - 이동된 url이 화면에 보이게 된다.
 - 리다이렉트 하는 방법
    -> response.sendRedirect("이동할페이지");

3. attribute scope
 - page : 
 - request : 요청부터 응답까지
 - session : web 브라우저 종료 또는 설정한 시간동안
 - application : 웹 어플리케이션이 시작되고 종료될 때 까지 변수가 유지되는 경우 사용
